/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/*
 * Assign the cs-gpios pin to 4.
 * Uncomment these next few lines if implementing nice!view Displays
 */

nice_view_spi: &spi0 { cs-gpios = <&pro_micro 4 GPIO_ACTIVE_HIGH>; };

/ {
    combos {
        compatible = "zmk,combos";

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <53 54>;
        };

        command_space {
            bindings = <&kp LG(SPACE)>;
            key-positions = <52 55>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <16 15>;
        };

        meh_tab {
            bindings = <&kp LC(LA(LS(TAB)))>;
            key-positions = <51 56>;
        };

        gui_right {
            bindings = <&sk LEFT_GUI>;
            key-positions = <31 32>;
        };

        shift_right {
            bindings = <&sk LEFT_SHIFT>;
            key-positions = <32 33>;
        };

        control_right {
            bindings = <&sk LEFT_CONTROL>;
            key-positions = <33 34>;
        };

        alt_right {
            bindings = <&sk LEFT_ALT>;
            key-positions = <31 33>;
        };

        meh_right {
            bindings = <&sk LA(LS(LEFT_CONTROL))>;
            key-positions = <34 32>;
        };

        hyper_right {
            bindings = <&sk LC(LA(LS(LEFT_COMMAND)))>;
            key-positions = <34 31>;
        };

        hyper_left {
            bindings = <&sk LC(LA(LS(LEFT_COMMAND)))>;
            key-positions = <28 25>;
        };

        meh_left {
            bindings = <&sk LA(LS(LEFT_CONTROL))>;
            key-positions = <25 27>;
        };

        alt_left {
            bindings = <&sk LEFT_ALT>;
            key-positions = <28 26>;
        };

        control_left {
            bindings = <&sk LEFT_CONTROL>;
            key-positions = <25 26>;
        };

        shift_left {
            bindings = <&sk LEFT_SHIFT>;
            key-positions = <27 26>;
        };

        gui_left {
            bindings = <&sk LEFT_GUI>;
            key-positions = <27 28>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = " OSX";
            bindings = <
&kp ESCAPE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3              &kp NUMBER_4      &kp N5                                          &kp NUMBER_6  &kp N7           &kp N8                    &kp N9      &kp N0     &kp K_SLEEP
&kp TAB     &kp Q         &kp W         &kp E                     &kp R             &kp T                                           &kp Y         &kp U            &kp I                     &kp O       &kp P      &kp DELETE
&sk LALT    &kp A         &kp S         &kp D                     &kp F             &kp G                                           &kp H         &kp J            &kp K                     &kp L       &kp SQT    &sk RIGHT_ALT
&sk LSHFT   &kp Z         &kp X         &kp C                     &kp V             &kp B                &mo 1      &kp ENTER       &kp N         &kp M            &kp COMMA                 &kp PERIOD  &kp SLASH  &sl 3
                                        &kp LS(LA(LC(LEFT_GUI)))  &sk LEFT_CONTROL  &mt LEFT_GUI RETURN  &lt 1 TAB  &sk LEFT_SHIFT  &kp SPACE     &lt 2 BACKSPACE  &kp LS(LA(LEFT_CONTROL))
            >;

            sensor-bindings =
                <&inc_dec_kp LEFT RIGHT>,
                <&inc_dec_kp DOWN UP_ARROW>;
        };

        lower_layer {
            display-name = "LOWER";
            bindings = <
&trans         &trans           &trans        &trans        &trans            &trans                                 &trans           &trans             &trans        &trans                &trans                 &trans
&kp LG(GRAVE)  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR        &kp PERCENT                            &kp CARET        &kp AMPERSAND      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&trans         &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp N5                                 &kp NUMBER_6     &kp N7             &kp N8        &kp N9                &kp N0                 &trans
&trans         &kp BACKSPACE    &kp TILDE     &kp GRAVE     &kp LEFT_BRACKET  &kp LEFT_BRACE  &trans  &trans         &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &trans        &trans                &kp LEFT_COMMAND       &trans
                                              &trans        &trans            &trans          &trans  &kp BACKSPACE  &trans           &kp COLON          &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOLUME_UP>,
                <&inc_dec_kp LEFT RIGHT>;
        };

        raise_layer {
            display-name = "RAISE";
            bindings = <
&trans  &trans         &trans            &trans      &trans       &trans                             &trans            &trans          &trans        &trans             &trans           &trans
&trans  &kp DELETE     &trans            &kp MINUS   &kp PLUS     &kp PAGE_UP                        &trans            &trans          &trans        &kp BACKSLASH      &kp PIPE         &trans
&trans  &kp HOME       &kp END           &kp UNDER   &kp EQUAL    &kp PAGE_DOWN                      &kp LEFT          &kp DOWN        &kp UP_ARROW  &kp RIGHT          &kp K_MENU       &trans
&trans  &kp LESS_THAN  &kp GREATER_THAN  &kp K_COPY  &kp K_PASTE  &kp SEMICOLON  &kp K_MUTE  &trans  &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans
                                         &trans      &kp ESCAPE   &trans         &kp TAB     &trans  &trans            &trans          &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_BRIGHTNESS_DEC C_BRIGHTNESS_INC>,
                <&inc_dec_kp DOWN UP_ARROW>;
        };

        function_layer {
            display-name = "FUNCTION";
            bindings = <
&trans                    &trans    &trans           &trans           &sys_reset       &bootloader                                 &bootloader   &sys_reset    &trans         &trans  &trans      &trans
&trans                    &kp F1    &kp F2           &kp F3           &kp F4           &kp F5                                      &kp F6        &kp F7        &kp F8         &kp F9  &kp F10     &trans
&trans                    &kp F11   &kp F12          &rgb_ug RGB_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI                             &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &trans  &bt BT_CLR  &trans
&kp LS(LA(LG(NUMBER_4)))  &kp CAPS  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &kp K_MUTE  &trans         &trans        &trans        &bt BT_DISC 2  &trans  &trans      &kp PRINTSCREEN
                                                     &trans           &trans           &trans           &kp TAB     &kp BACKSPACE  &trans        &trans        &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOLUME_UP>,
                <&inc_dec_kp DOWN UP_ARROW>;
        };
    };
};
